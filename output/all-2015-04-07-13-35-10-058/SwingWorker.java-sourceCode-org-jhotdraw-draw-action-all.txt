 * This is the 3rd version of SwingWorker (also known as
 * SwingWorker 3), an abstract class that you subclass to
 * perform GUI-related work in a dedicated thread.  For
 * instructions on using this class, see:
 * http://java.sun.com/docs/books/tutorial/uiswing/misc/threads.html
 * Note that the API changed slightly in the 3rd version:
 * You must now invoke start() on the SwingWorker after
 * creating it.
 * @author SUN Microsystems, Inc.
 
 see getValue(), setValue()
	 * Class to maintain reference to current worker thread
	 * under separate synchronization control.
	 
	 * Start a thread that will call the <code>construct</code> method
	 * and then exit.
	 
	 * Compute the value to be returned by the <code>get</code> method.
	 
	 * Called on the event dispatching thread (not on the worker thread)
	 * after the <code>construct</code> method has returned.
	 
	 * Return the value created by the <code>construct</code> method.
	 * Returns null if either the constructing thread or the current
	 * thread was interrupted before a value was produced.
	 *
	 * @return the value created by the <code>construct</code> method
	 
 propagate
	 * Get the value produced by the worker thread, or null if it
	 * hasn't been constructed yet.
	 
	 * A new method that interrupts the worker thread.  Call this method
	 * to force the worker to stop what it's doing.
	 
	 * Set the value produced by worker thread
	 
	 * Start the worker thread.
	 
