 * @(#)DefaultDrawingView.java  3.0.2  2006-07-03
 * Copyright (c) 1996-2006 by the original authors of JHotDraw
 * and all its contributors ("JHotDraw.org")
 * All rights reserved.
 * This software is the confidential and proprietary information of
 * JHotDraw.org ("Confidential Information"). You shall not disclose
 * such Confidential Information and shall use it only in accordance
 * with the terms of the license agreement you entered into with
 * JHotDraw.org.
ï¿½
 
 * DefaultDrawingView.
 * @author Werner Randelshofer
 * @version 3.0.2 2006-07-03 Constrainer must be a bound property.
 * <br>3.0.1 2006-06-11 Draw handles when this DrawingView is the focused
 * drawing view of the DrawingEditor.
 * <br>3.0 2006-02-17 Reworked to support multiple drawing views in a
 * DrawingEditor.
 * <br>2.0 2006-01-14 Changed to support double precision coordinates.
 * <br>1.0 2003-12-01 Derived from JHotDraw 5.4b1.
 
private boolean hasPermanentFocus;
 Creates new instance. 
 This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     
GEN-BEGIN:initComponents
GEN-END:initComponents
g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_OFF);
g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
        rainbow = (rainbow + 10) % 360;
        g.setColor(
        new Color(Color.HSBtoRGB((float) (rainbow / 360f), 0.3f, 1.0f))
        );
        
 Position of the zero coordinate point on the view
 Draw a gray background for the area which is at
 negative view coordinates.
 Repaint the whole drawing to remove the message label
 Repaint the whole drawing to draw the message label
     * Adds a figure to the current selection.
     
     * Adds a collection of figures to the current selection.
     
     * Removes a figure from the selection.
     
     * If a figure isn't selected it is added to the selection.
     * Otherwise it is removed from the selection.
     
     * Selects all figures.
     
     * Clears the current selection.
     
     * Test whether a given figure is selected.
     
     * Gets the current selection as a FigureSelection. A FigureSelection
     * can be cut, copied, pasted.
     
     * Gets the number of selected figures.
     
     * Gets the currently active selection handles.
     
     * Gets the currently active secondary handles.
     
     * Invalidates the handles.
     
validateHandles();
     * Validates the handles.
     
     * Finds a handle at a given coordinates.
     * @return A handle, null if no handle is found.
     
     * Gets compatible handles.
     * @return A collection containing the handle and all compatible handles.
     
     * Finds a figure at a given coordinates.
     * @return A figure, null if no figure is found.
     
     *  Notify all listenerList that have registered interest for
     * notification on this event type.
     
 Notify all listeners that have registered interest for
 Guaranteed to return a non-null array
 Process the listeners last to first, notifying
 those that are interested in this event
 Lazily create the event:
validateHandles();
     * Side effect: Changes view Translation!!!
     
     * Converts drawing coordinates to view coordinates.
     
     * Converts view coordinates to drawing coordinates.
     
if (e.getHandle() != secondaryHandleOwner) {
}
 Variables declaration - do not modify//GEN-BEGIN:variables
 End of variables declaration//GEN-END:variables
