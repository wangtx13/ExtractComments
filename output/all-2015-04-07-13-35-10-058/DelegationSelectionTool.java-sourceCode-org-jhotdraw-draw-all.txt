 * @(#)DelegationSelectionTool.java  2.0  2006-02-21
 * Copyright (c) 1996-2006 by the original authors of JHotDraw
 * and all its contributors ("JHotDraw.org")
 * All rights reserved.
 * This software is the confidential and proprietary information of
 * JHotDraw.org ("Confidential Information"). You shall not disclose
 * such Confidential Information and shall use it only in accordance
 * with the terms of the license agreement you entered into with
 * JHotDraw.org.
ï¿½
 
 * A SelectionTool, which recognizes double clicks and popup menu triggers.
 * If a double click or popup trigger is encountered a hook method is called,
 * which handles the event. This methods can be overriden in subclasse to
 * provide customized behaviour.
 * <p>
 * By default, this Tool delegates mouse events to a specific Tool if
 * the figure which has been double clicked, provides a specialized tool.
 * @author Werner Randelshofer
 * @version 2.0 2006-01-18 Changed to support double precision coordinates.
 * Popup timer added. Support for radio button menu items added.
 * <br>1.0 2003-12-01 Derived from JHotDraw 5.4b1.
 
     * A set of actions which is applied to the drawing.
     
     * A set of actions which is applied to a selection of figures.
     
     * We use this timer, to show a popup menu, when the user presses the
     * mouse key for a second without moving the mouse.
     
     * When the popup menu is visible, we do not track mouse movements.
     
 Creates a new instance. 
 Creates a new instance. 
     * MouseListener method for mousePressed events. If the popup trigger has
     * been activated, then the appropriate hook method is called.
     
 XXX - When we want to support multiple views, we have to
       implement this:
setView((DrawingView)e.getSource());
     * MouseListener method for mouseReleased events. If the popup trigger has
     * been activated, then the appropriate hook method is called.
     
     * Hook method which can be overriden by subclasses to provide
     * specialised behaviour in the event of a popup trigger.
     
     * Hook method which can be overriden by subclasses to provide
     * specialised behaviour in the event of a double click.
     
v.setHandleDetailLevel(v.getHandleDetailLevel() == 1 ? 0 : 1);
