 * @(#)AbstractHandle.java  1.0  14. November 2003
 * Copyright (c) 1996-2006 by the original authors of JHotDraw
 * and all its contributors ("JHotDraw.org")
 * All rights reserved.
 * This software is the confidential and proprietary information of
 * JHotDraw.org ("Confidential Information"). You shall not disclose
 * such Confidential Information and shall use it only in accordance
 * with the terms of the license agreement you entered into with
 * JHotDraw.org.
ï¿½
 
 * AbstractHandle.
 * @author Werner Randelshofer
 * @version 1.0 2003-12-01 Derived from JHotDraw 5.4b1.
 
     * The bounds of the abstract handle.
     
 Creates a new instance. 
 FIXME - Get this form the drawing view. 
     * Adds a listener for this handle.
     
     * Removes a listener for this handle.
     
     *  Notify all listenerList that have registered interest for
     * notification on this event type.
     
 Notify all listeners that have registered interest for
 Guaranteed to return a non-null array
 Process the listeners last to first, notifying
 those that are interested in this event
 Lazily create the event:
     *  Notify all listenerList that have registered interest for
     * notification on this event type.
     
        UndoableEditEvent event = null;
        // Notify all listeners that have registered interest for
        // Guaranteed to return a non-null array
        Object[] listeners = listenerList.getListenerList();
        // Process the listeners last to first, notifying
        // those that are interested in this event
        for (int i = listeners.length-2; i>=0; i-=2) {
            if (listeners[i] == UndoableEditListener.class) {
                // Lazily create the event:
                if (event == null)
                    event = new UndoableEditEvent(this, edit);
                ((UndoableEditListener)listeners[i+1]).undoableEditHappened(event);
            }
        }
     *  Notify all listenerList that have registered interest for
     * notification on this event type.
     
 Notify all listeners that have registered interest for
 Guaranteed to return a non-null array
 Process the listeners last to first, notifying
 those that are interested in this event
 Lazily create the event:
     *  Notify all listenerList that have registered interest for
     * notification on this event type.
     
 Notify all listeners that have registered interest for
 Guaranteed to return a non-null array
 Process the listeners last to first, notifying
 those that are interested in this event
 Lazily create the event:
     * Draws this handle.
     
     * Sent when a region used by the figure needs to be repainted.
     * The implementation of this method assumes that the handle
     * is located on the bounds of the figure or inside the figure.
     * If the handle is located elsewhere this method must be reimpleted
     * by the subclass.
     
     * Sent when a figure was added.
     
 Empty
     * Sent when a figure was removed.
     
 Empty
     * Sent when a figure requests to be removed.
     
 Empty
     * Sent when the bounds or shape of a figure has changed.
     
     * Returns a cursor for the handle.
     
     * Returns true, if the given handle is an instance of the same
     * class or of a subclass of this handle,.
     
 grow by two pixels to take antialiasing into account
     * Tracks a double click.
     
